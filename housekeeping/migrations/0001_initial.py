# Generated by Django 3.2.3 on 2021-07-07 12:33

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_Admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CompanyDetails',
            fields=[
                ('company_name', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('owner_name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=45)),
                ('address', models.TextField()),
                ('phone', models.IntegerField()),
                ('email', models.CharField(max_length=100)),
                ('about', models.TextField()),
                ('visting_hours', models.CharField(max_length=20)),
                ('working_hours', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('subject', models.CharField(max_length=20)),
                ('complaint_text', models.TextField()),
                ('status', models.CharField(default='', max_length=10)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=45)),
                ('query', models.TextField()),
                ('answer', models.TextField(null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employee_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=45)),
                ('address', models.TextField()),
                ('phone', models.IntegerField()),
                ('gender', models.CharField(max_length=6)),
                ('date_of_join', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('experience', models.CharField(max_length=20)),
                ('employee_type', models.CharField(max_length=40, null=True)),
                ('admin_pic', models.ImageField(default='', upload_to='housekeeping/employee')),
                ('status', models.CharField(default='Free', max_length=10)),
                ('request_id', models.IntegerField(default=0)),
                ('user_id', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_type', models.CharField(max_length=45)),
                ('username', models.CharField(max_length=100)),
                ('noOfEmployee', models.IntegerField()),
                ('date_of_request', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('request_text', models.TextField()),
                ('date_of_answer', models.DateTimeField(blank=True, null=True)),
                ('answer', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_type', models.CharField(max_length=45)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('feedback_text', models.TextField()),
                ('rating', models.IntegerField()),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('jobid', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('postname', models.CharField(max_length=100)),
                ('eligibility', models.CharField(max_length=45)),
                ('no_of_post', models.IntegerField()),
                ('age_limit', models.CharField(max_length=45)),
                ('email', models.CharField(max_length=45)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('phone', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('username', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('city', models.CharField(max_length=45)),
                ('address', models.TextField()),
                ('phone', models.IntegerField()),
                ('gender', models.CharField(max_length=6)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyAdmin',
            fields=[
                ('customuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='housekeeping.customuser')),
                ('city', models.CharField(max_length=45)),
                ('address', models.TextField()),
                ('phone', models.IntegerField()),
                ('gender', models.CharField(max_length=6)),
                ('experience', models.CharField(max_length=20)),
                ('admin_pic', models.ImageField(default='', upload_to='housekeeping/admin')),
            ],
        ),
        migrations.CreateModel(
            name='EmployeeAssignment',
            fields=[
                ('assign_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('employee', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='housekeeping.employee')),
                ('request', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='housekeeping.employeerequest')),
            ],
        ),
    ]
